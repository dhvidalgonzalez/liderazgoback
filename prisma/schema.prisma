generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  rut       String   @unique
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  createdJustifications  Justification[] @relation("CreatedBy")
  reviewedJustifications Justification[] @relation("ReviewedBy")
}

model EmployeeProfile {
  id             String           @id @default(uuid())
  rut            String           @unique
  name           String           // Nombre completo del empleado
  email          String?           // Correo electrónico
  sapCode        String?          // Código SAP (opcional)
  gerencia       String?          // Gerencia o unidad organizacional
  empresa        String?          // Empresa o razón social, si aplica
  position           String?          // Cargo o posición
  startDate      DateTime
  endDate        DateTime
  isActive       Boolean          @default(true)
  justifications Justification[] // Relación uno a muchos
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Justification {
  id                String              @id @default(uuid())

  // Datos estáticos del trabajador justificado
  employeeNombre    String
  employeeRut       String
  employeeEmail     String
  employeeSapCode   String?            // Opcional
  employeeGerencia  String?            // Opcional
  employeeEmpresa   String?
  employeePosition         String?          // Cargo o posición
  // Relación con perfil del empleado
  employeeProfileId String
  employeeProfile   EmployeeProfile    @relation(fields: [employeeProfileId], references: [id])

  // Información de la justificación
  startDate         DateTime
  endDate           DateTime
  type              JustificationType
  description       String?
  documentUrl       String?
  status            JustificationStatus @default(PENDING)
  reviewedAt        DateTime?

  // Usuario que crea la justificación (requiere login)
  creatorId         String
  creator           User                @relation("CreatedBy", fields: [creatorId], references: [id])

  // Usuario revisor (opcional)
  reviewerId        String?
  reviewer          User?               @relation("ReviewedBy", fields: [reviewerId], references: [id])
  reviewerCause     String?
  reviewerComment   String?

  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum JustificationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum JustificationType {
  VACATION
  COMISION
  ACTIVIDAD
  MEDICAL
  LEGAL
  OTHER
}
