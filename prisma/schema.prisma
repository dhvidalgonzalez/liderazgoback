generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  rut       String   @unique
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER") // Reemplaza el enum Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  createdJustifications  Justification[] @relation("CreatedBy")
  reviewedJustifications Justification[] @relation("ReviewedBy")
}

model EmployeeProfile {
  id             String           @id @default(uuid())
  rut            String           @unique
  name           String
  email          String?
  sapCode        String?
  gerencia       String?
  empresa        String?
  position       String?
  startDate      DateTime
  endDate        DateTime
  isActive       Boolean          @default(true)
  justifications Justification[] // Relaci贸n uno a muchos
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Justification {
  id                String   @id @default(uuid())

  // Datos del trabajador justificado
  employeeNombre    String
  employeeRut       String
  employeeEmail     String
  employeeSapCode   String?
  employeeGerencia  String?
  employeeEmpresa   String?
  employeePosition  String?

  // Relaci贸n con EmployeeProfile
  employeeProfileId String
  employeeProfile   EmployeeProfile @relation(fields: [employeeProfileId], references: [id])

  // Informaci贸n de la justificaci贸n
  startDate         DateTime
  endDate           DateTime
  type              String   // Reemplaza JustificationType enum
  description       String?
  documentUrl       String?
  status            String   @default("PENDING") // Reemplaza JustificationStatus enum
  reviewedAt        DateTime?

  // Usuario que crea
  creatorId         String
  creator           User     @relation("CreatedBy", fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  // Usuario revisor
  reviewerId        String?
  reviewer          User?    @relation("ReviewedBy", fields: [reviewerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviewerCause     String?
  reviewerComment   String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
